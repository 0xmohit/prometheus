// Copyright 2017 Prometheus Team
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package prometheus.api.v2;

import "types.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "tsdbpb";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;

// AdminTSDB exposes methods of Prometheus' TSDB.
service AdminTSDB {
  // Reload triggers a reload of block data.
  rpc Reload(AdminTSDBReloadRequest) returns (AdminTSDBReloadResponse) {
    option (google.api.http) = {
      get: "/admin/tsdb/reload"
    };
  }

  // Snapshot creates a snapshot of all current data into 'snapshots/<datetime>' under
  // the TSDB's date directory.
  rpc Snapshot(AdminTSDBSnapshotRequest) returns (AdminTSDBSnapshotResponse) {
    option (google.api.http) = {
      get: "/admin/tsdb/snapshot"
    };
  }

  // DeleteSeries deletes data for a selection of series in a time range.
  rpc DeleteSeries(AdminTSDBSeriesDeleteRequest) returns (AdminTSDBSeriesDeleteResponse) {
    option (google.api.http) = {
      post: "/admin/tsdb/delete_series"
      body: "*"
    };
  }
}

message AdminTSDBReloadRequest {
}

message AdminTSDBReloadResponse {
}

message AdminTSDBSeriesDeleteRequest {
  google.protobuf.Timestamp mint       = 1 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp maxt       = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  repeated prometheus.LabelMatcher matchers = 3;
}

message AdminTSDBSeriesDeleteResponse {
}

message AdminTSDBSnapshotRequest {
}

message AdminTSDBSnapshotResponse {
  string name = 1;
}
